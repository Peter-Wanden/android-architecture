import com.android.build.gradle.internal.tasks.databinding.DataBindingExportBuildInfoTask

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Define versions in a single place
ext {
    // Sdk and tools
    // Support library and architecture components support minSdk 14 and above.
    minSdkVersion = 14
    targetSdkVersion = 29
    compileSdkVersion = 29
    buildToolsVersion = '29.0.0'

    // App dependencies
    supportLibraryVersion = '29.0.0'
    guavaVersion = '28.1-jre'
    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
    powerMockito = '1.6.2'
    hamcrestVersion = '1.3'
    espressoVersion = '3.0.2'

    // Architecture Components dependencies
    archLifecycleVersion = "1.1.1"

    // Androidx
    appCompat = "1.1.0-alpha05"
    cardView = "1.0.0"
    material = "1.1.0-alpha06"
    recyclerView = "1.1.0-alpha05"
    legacySupport = "1.0.0"
    roomRunTime = "2.1.0-beta01"
    roomCompiler = '2.2.1'
    lifecycleExtensions = "2.2.0-alpha01"
    lifecycleCompiler = '2.2.0-rc01'

    coreTesting = '2.1.0'
    runnerVersion = '1.2.0'
    rulesVersion = '1.2.0'
    roomTestingVersion = '2.2.1'

    espressoCore = '3.2.0'
    espressoContrib = "3.1.0"
    espressoIntents = '3.2.0'
    espressoConcurrent = '3.2.0'
    espressoIdlingResource = "3.1.1"

    annotations = "1.0.0"
    coreCore = "1.2.0-alpha01"


}

/*
 * Workaround for https://code.google.com/p/android/issues/detail?id=182715
 *
 * The Android Gradle plugin is creating DataBindingExportBuildInfoTasks for the instrumentation
 * APK that generates from the app APKs layouts. This creates duplicate classes in the app and
 * instrumentation APK which leads to
 *      java.lang.IllegalAccessError: Class ref in pre-verified class resolved to unexpected implementation
 * on older devices.
 *
 * The workaround is to get the DataBindingExportBuildInfoTasks tasks for the instrumentation APK
 * and delete the files right after it creates them.
 */
subprojects {
    tasks.withType(DataBindingExportBuildInfoTask) { task ->
        if (task.name.endsWith("AndroidTest")) {
            task.finalizedBy(tasks.create("${task.name}Workaround") << {
                task.output.deleteDir()
            })
        }
    }
}
